*,*::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Merriweather Sans', sans-serif;
}

:root {
    --colorDark1: #112D4E;
    --colorDark2: #3F72AF;
    --colorLight1: #DBE2EF;
    --colorLight2: #F9F7F7;
    --thunder-duration: 10s;
    --thunder-delay: 5s;
}

body {
    width: 100%;
    height: 100vh;
    color: var(--colorLight2);
    background-image: linear-gradient(180deg,rgb(255, 176, 116) 0%, rgb(162, 196, 251) 100%);
    background-size: cover;
    background-position: center bottom;
    position: relative;
    overflow: hidden;
    display: block;
}

h1 {
    text-align: center;
    padding-top: 30px;
}

.tab-container {
    display: flex;
    justify-content: space-between;
    width: 90%;
    max-width: 550px;
    margin: 0 auto;
    margin-top: 4rem;
}

.tab {
    cursor: pointer;
    font-size: 0.875rem;
    letter-spacing: 1.75px;
    padding: 5px 8px;
    transform: all 0.1s;
    transition: transform 0.3s;
}

.tab:hover {
    transform: translateY(-10px);
}
.tab.current-tab {
    background-color: rgba(195, 195, 195, 0.5);
    border-radius: 4px;
}

.weather-container {
    margin-block: 4rem;
}

.btn {
    all: unset;
    font-size: 0.85rem;
    cursor: pointer;
    padding: 10px 30px;
    border-radius: 5px;
    background-color: var(--colorDark2);
    transform: all 0.1s;
    transition: transform 0.3s;
}

.btn:hover {
    transform: translateY(-5px);
    background-color: white;
    color: var(--colorDark2);
}

.sub-container {
    display:flex;
    flex-direction: column;
    align-items: center;
}

.grant-location-container {
   display: none;
}

.grant-location-container.active {
    display: flex;
}

.grant-location-container img {
    margin-bottom: 2rem;
}

.grant-location-container p:first-of-type {
    font-size: 1.75rem;
    font-weight: 600;
}

.grant-location-container p:last-of-type {
    font-size: 0.85rem;
    font-weight: 500;
    margin-top: 0.75rem;
    margin-bottom: 1.75rem;
    letter-spacing: 0.75px;
}

.loading-container {
    display: none;
}

.loading-container.active {
    display: flex;
}

.user-info-container {
    display: none;
}

.user-info-container.active {
    display: flex;
}

.name {
    display: flex;
    align-items: center;
    gap: 0 0.5rem;
    margin-bottom: 1rem;
}

.user-info-container p{
    font-size: 1.5rem;
    font-weight: 200;
}

.user-info-container img {
    width: 90px;
    height: 90px;
}

.name p {
    font-size: 2rem;
}

.name img {
    width: 30px;
    height: 30px;
    object-fit: contain;
}

.user-info-container p[data-temp] {
    font-size: 2.75rem;
    font-weight: 700;
}

.parameter-container {
    display: flex;
    gap: 10px 20px;
    justify-content: center;
    margin-top: 2rem;
}

.parameter {
    width: 30%;
    max-width: 200px;
    background-color: rgba(207, 207, 207, 0.5);
    border-radius: 5px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 5px 0;
    align-items: center;
    transform: all 0.1s;
    transition: transform 0.3s;
}

.parameter:hover {
    transform: translateY(-10px);
}

.parameter img {
    width: 50px;
    height: 50px;
}

.parameter p:first-of-type {
    font-size: 1.15rem;
    font-weight: 600;
}

.parameter p:last-of-type {
    font-size: 1rem;
    font-weight: 200;
}

.form-container {
    display: none;
    width: 90%;
    max-width: 550px;
    margin: 0 auto;
    justify-content: center;
    align-items: center;
    gap: 0 10px;
    margin-bottom: 3rem;
}

.form-container.active {
    display: flex;
}

.form-container input {
    all:unset;
    width: calc(100% - 80px);
    height: 40px;
    padding: 0 20px;
    background-color: rgba(207, 207, 207, 0.5);
    border-radius: 10px;
    transform: all 0.1s;
    transition: transform 0.3s;
}

.form-container input:hover {
    transform: translateY(-10px);
}

.form-container input::placeholder {
    color: rgba(255,255,255,0.7);
}

.form-container input:focus {
    outline: 3px solid rgba(255,255,255,0.7);
}

.btn2 {
    padding: 0 0;
    border: none;
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transform: all 0.1s;
    transition: transform 0.3s;
}

.btn2:hover {
    transform: translateY(-10px);
}
     
.snow, .snow:after, .snow:before {
    top: -650px;
    left: 0;
    right: 0;
    bottom: 0;
    background-image:
    radial-gradient(4px 4px at 100px 50px, #fff, transparent),
    radial-gradient(6px 6px at 200px 150px, #fff, transparent),
    radial-gradient(3px 3px at 300px 250px, #fff, transparent),
    
    
    radial-gradient(4px 4px at 400px 350px, #fff, transparent),
    radial-gradient(6px 6px at 500px 100px, #fff, transparent),
    radial-gradient(3px 3px at 50px 200px, #fff, transparent),
    
    
    radial-gradient(4px 4px at 150px 300px, #fff, transparent),
    radial-gradient(6px 6px at 250px 400px, #fff, transparent),
    radial-gradient(3px 3px at 350px 500px, #fff, transparent),
    
    radial-gradient(4px 4px at 700px 600px, #fff, transparent),
    radial-gradient(8px 8px at 850px 500px, #fff, transparent),
    radial-gradient(7px 7px at 750px 700px, #fff, transparent);
    
    
    background-size: 650px 650px;
    animation: snowAnim 3s linear;
    animation-iteration-count: infinite;
    pointer-events: none;
    z-index: -1;
    width: 100vw;
    height: 100vh;
    position: absolute;
    scale: 0;
}

.snow.active {
    scale: 1;
}
    
.snow:after {
    margin-left: -250px;
    opacity: 0.5;
    filter: blur(2px);
    animation-direction: reverse;
    animation-duration: 6s;
    
}    
    
.snow:before {
    margin-left: -350px;
    opacity: 0.7;
    filter: blur(1px);
    animation-direction: reverse;
    animation-duration: 6s;
}
    
@keyframes snowAnim {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(650px);
    }
}

hr.thunder {
    border: unset;
    position: absolute;
    width: 100vw;
    height: 100vh;
    animation-name: thunder;
    animation-duration: var(--thunder-duration);
    animation-timing-function: linear;
    animation-delay: var(--thunder-delay);
    animation-iteration-count: infinite;
  }
  
hr:not(.thunder) {
    width: 50px;
    border-color: transparent;
    border-right-color: rgba(255, 255, 255, 0.7);
    border-right-width: 50px;
    position: absolute;
    bottom: 100%;
    transform-origin: 100% 50%;
    animation-name: rain;
    animation-duration: 1s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

.thunder {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: transparent;
    animation: thunder 1s linear infinite;
    z-index: 9999;
    pointer-events: none;
}

  
@keyframes rain {
    from {
      transform: rotate(105deg) translateX(0);
    }
    to {
      transform: rotate(105deg) translateX(calc(100vh + 20px));
    }
  }
  
  @keyframes thunder {
    0% {
      background-color: transparent;
    }
    1% {
      background-color: white;
    }
    2% {
      background-color: rgba(255, 255, 255, 0.8);
    }
    8% {
      background-color: transparent;
    }
}